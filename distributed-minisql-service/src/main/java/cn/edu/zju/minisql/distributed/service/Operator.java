/**
 * Autogenerated by Thrift Compiler (0.14.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package cn.edu.zju.minisql.distributed.service;


@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.14.1)", date = "2021-05-02")
public enum Operator implements org.apache.thrift.TEnum {
  AND(0),
  OR(1),
  LESS_THAN(2),
  LESS_THAN_OR_EQUAL(3),
  GREATER_THAN(4),
  GREATER_THAN_OR_EQUAL(5),
  EQUAL(6),
  NOT_EQUAL(7);

  private final int value;

  private Operator(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  @org.apache.thrift.annotation.Nullable
  public static Operator findByValue(int value) { 
    switch (value) {
      case 0:
        return AND;
      case 1:
        return OR;
      case 2:
        return LESS_THAN;
      case 3:
        return LESS_THAN_OR_EQUAL;
      case 4:
        return GREATER_THAN;
      case 5:
        return GREATER_THAN_OR_EQUAL;
      case 6:
        return EQUAL;
      case 7:
        return NOT_EQUAL;
      default:
        return null;
    }
  }
}
